// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cage1016/ms-sample/internal/app/tictac/model (interfaces: TictacRespository)

// Package automocks is a generated GoMock package.
package automocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTictacRespository is a mock of TictacRespository interface
type MockTictacRespository struct {
	ctrl     *gomock.Controller
	recorder *MockTictacRespositoryMockRecorder
}

// MockTictacRespositoryMockRecorder is the mock recorder for MockTictacRespository
type MockTictacRespositoryMockRecorder struct {
	mock *MockTictacRespository
}

// NewMockTictacRespository creates a new mock instance
func NewMockTictacRespository(ctrl *gomock.Controller) *MockTictacRespository {
	mock := &MockTictacRespository{ctrl: ctrl}
	mock.recorder = &MockTictacRespositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTictacRespository) EXPECT() *MockTictacRespositoryMockRecorder {
	return m.recorder
}

// Tac mocks base method
func (m *MockTictacRespository) Tac(arg0 context.Context) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Tac", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Tac indicates an expected call of Tac
func (mr *MockTictacRespositoryMockRecorder) Tac(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Tac", reflect.TypeOf((*MockTictacRespository)(nil).Tac), arg0)
}

// Tic mocks base method
func (m *MockTictacRespository) Tic(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Tic", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Tic indicates an expected call of Tic
func (mr *MockTictacRespositoryMockRecorder) Tic(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Tic", reflect.TypeOf((*MockTictacRespository)(nil).Tic), arg0)
}
