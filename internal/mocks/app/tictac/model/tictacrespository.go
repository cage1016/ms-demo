// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cage1016/ms-sample/internal/app/tictac/model (interfaces: TicTacRespository)

// Package automocks is a generated GoMock package.
package automocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTicTacRespository is a mock of TicTacRespository interface
type MockTicTacRespository struct {
	ctrl     *gomock.Controller
	recorder *MockTicTacRespositoryMockRecorder
}

// MockTicTacRespositoryMockRecorder is the mock recorder for MockTicTacRespository
type MockTicTacRespositoryMockRecorder struct {
	mock *MockTicTacRespository
}

// NewMockTicTacRespository creates a new mock instance
func NewMockTicTacRespository(ctrl *gomock.Controller) *MockTicTacRespository {
	mock := &MockTicTacRespository{ctrl: ctrl}
	mock.recorder = &MockTicTacRespositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTicTacRespository) EXPECT() *MockTicTacRespositoryMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockTicTacRespository) Add(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add
func (mr *MockTicTacRespositoryMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockTicTacRespository)(nil).Add), arg0)
}

// Get mocks base method
func (m *MockTicTacRespository) Get(arg0 context.Context) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockTicTacRespositoryMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockTicTacRespository)(nil).Get), arg0)
}
